<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Ktunaxa Referral Management System.
  ~
  ~ Copyright (C) see version control system
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU Affero General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU Affero General Public License for more details.
  ~
  ~ You should have received a copy of the GNU Affero General Public License
  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.ktunaxa.referral</groupId>
		<artifactId>ktunaxa-parent</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>
	<groupId>org.ktunaxa.referral</groupId>
	<artifactId>ktunaxa-map</artifactId>
	<packaging>war</packaging>
	<name>Mapping dashboard</name>
	<description>Mapping dashboard for Ktunaxa referral system</description>
	<url>http://www.ktunaxa.org/</url>

	<scm>
		<connection>scm:svn:https://svn.geomajas.org/geosparc/projects/ktunaxa/map</connection>
		<developerConnection>scm:svn:https://svn.geomajas.org/geosparc/projects/ktunaxa/map</developerConnection>
		<url>https://svn.geomajas.org/geosparc/projects/ktunaxa/map</url>
	</scm>

	<dependencies>
		<!-- fix conflicts over xerces/xalan versions -->
		<dependency>
			<groupId>xerces</groupId>
			<artifactId>xercesImpl</artifactId>
		</dependency>
		<dependency>
			<groupId>xalan</groupId>
			<artifactId>xalan</artifactId>
		</dependency>

        <!-- OpenCMIS dependencies -->
        <dependency>
            <groupId>org.apache.chemistry.opencmis</groupId>
            <artifactId>chemistry-opencmis-client-impl</artifactId>
        </dependency>
        <dependency>
            <groupId>org.alfresco.cmis.client</groupId>
            <artifactId>alfresco-opencmis-extension</artifactId>
        </dependency>

		<dependency>
			<groupId>org.ktunaxa.referral</groupId>
			<artifactId>ktunaxa-theme</artifactId>
		</dependency>

		<dependency>
			<groupId>org.ktunaxa.referral</groupId>
			<artifactId>ktunaxa-bpm</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.ktunaxa.referral</groupId>
			<artifactId>ktunaxa-bpm</artifactId>
			<classifier>sources</classifier>
		</dependency>

		<dependency>
			<groupId>commons-fileupload</groupId>
			<artifactId>commons-fileupload</artifactId>
		</dependency>

		<dependency>
			<groupId>commons-io</groupId>
			<artifactId>commons-io</artifactId>
		</dependency>

		<dependency>
			<groupId>org.apache.httpcomponents</groupId>
			<artifactId>httpclient</artifactId>
		</dependency>

		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
		</dependency>

		<dependency>
			<groupId>com.smartgwt</groupId>
			<artifactId>smartgwt-skins</artifactId>
		</dependency>

		<!-- Geomajas dependencies -->
		<dependency>
			<groupId>org.geomajas</groupId>
			<artifactId>geomajas-gwt-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.geomajas.plugin</groupId>
			<artifactId>geomajas-plugin-staticsecurity-gwt</artifactId>
		</dependency>
		<dependency>
			<groupId>org.geomajas.plugin</groupId>
			<artifactId>geomajas-plugin-staticsecurity-ldap</artifactId>
		</dependency>
		<dependency>
			<groupId>org.geomajas.plugin</groupId>
			<artifactId>geomajas-plugin-rasterizing-gwt</artifactId>
		</dependency>
		<dependency>
			<groupId>org.geomajas.plugin</groupId>
			<artifactId>geomajas-layer-geotools</artifactId>
		</dependency>
		<dependency>
			<groupId>org.geomajas.plugin</groupId>
			<artifactId>geomajas-layer-wms</artifactId>
		</dependency>
		<dependency>
			<groupId>org.geomajas.plugin</groupId>
			<artifactId>geomajas-layer-openstreetmap</artifactId>
			<scope>compile</scope> <!-- caching contains bad test dependency which trickled here -->
		</dependency>
		<dependency>
			<groupId>org.geomajas.plugin</groupId>
			<artifactId>geomajas-layer-google</artifactId>
		</dependency>
		<dependency>
			<groupId>org.geomajas.plugin</groupId>
			<artifactId>geomajas-plugin-geocoder-gwt</artifactId>
		</dependency>
		<dependency>
			<groupId>org.geomajas</groupId>
			<artifactId>geomajas-testdata</artifactId>
		</dependency>

		<!-- Hibernate layer can be removed if not needed, but the "Road" class needs the Hibernate stuff -->
		<dependency>
			<groupId>org.geomajas.plugin</groupId>
			<artifactId>geomajas-layer-hibernate</artifactId>
		</dependency>
		<!-- uncomment if you want to use Hibernate with postgis, for another db you will need similar dependencies -->
		<dependency>
			<groupId>org.hibernatespatial</groupId>
			<artifactId>hibernate-spatial-postgis</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgis</groupId>
			<artifactId>postgis-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>
		<dependency>
			<groupId>com.jolbox</groupId>
			<artifactId>bonecp</artifactId>
		</dependency>

		<dependency>
			<groupId>com.metaparadigm</groupId>
			<artifactId>json-rpc</artifactId>
		</dependency>

		<dependency>
			<groupId>org.geomajas.widget</groupId>
			<artifactId>geomajas-widget-searchandfilter-gwt</artifactId>
		</dependency>
		<dependency>
			<groupId>org.geomajas.widget</groupId>
			<artifactId>geomajas-widget-utility-gwt</artifactId>
		</dependency>

		<dependency>
			<groupId>org.geomajas.plugin</groupId>
			<artifactId>geomajas-plugin-printing-gwt</artifactId>
		</dependency>
		<dependency>
			<groupId>org.geomajas.plugin</groupId>
			<artifactId>geomajas-plugin-reporting-gwt</artifactId>
		</dependency>

		<!-- Google dependencies -->
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<scope>provided</scope>
		</dependency>

		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-servlet</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- logging dependencies, delegate all to slf4j and use logback -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>

		<!-- Unit testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.easytesting</groupId>
			<artifactId>fest-assert</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>
		
		<dependency>
			<groupId>org.geomajas</groupId>
			<artifactId>geomajas-jetty-runner</artifactId>
			<version>1.0.0</version>
			<scope>test</scope>
		</dependency>


		<dependency>
			<groupId>org.freemarker</groupId>
			<artifactId>freemarker</artifactId>
		</dependency>
	</dependencies>

	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
				<includes>
					<include>META-INF/geomajasContext.xml</include>
				</includes>
			</resource>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>false</filtering>
				<excludes>
					<exclude>META-INF/geomajasContext.xml</exclude>
				</excludes>
			</resource>
		</resources>

		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<encoding>utf8</encoding>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.5-DF</version>
				<configuration>
					<configLocation>${basedir}/src/main/resources/checkstyle.xml</configLocation>
				</configuration>
				<executions>
					<execution>
						<phase>verify</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Run the application using "mvn jetty:run" -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<version>6.1.20</version>
				<configuration>
					<webAppConfig>
						<contextPath>/</contextPath>
						<baseResource implementation="org.mortbay.resource.ResourceCollection">
							<!-- need both the webbapp dir and location where GWT puts stuff -->
							<resourcesAsCSV>${basedir}/src/main/webapp,${project.build.directory}/${project.build.finalName}</resourcesAsCSV>
						</baseResource>
					</webAppConfig>
					<reload>manual</reload>
				</configuration>
			</plugin>

			<!-- some default config, added to in profiles -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>2.4.0</version>
				<dependencies>
					<dependency>
						<groupId>com.google.gwt</groupId>
						<artifactId>gwt-user</artifactId>
						<version>${gwt.version}</version>
					</dependency>
					<dependency>
						<groupId>com.google.gwt</groupId>
						<artifactId>gwt-dev</artifactId>
						<version>${gwt.version}</version>
					</dependency>
				</dependencies>
				<configuration>
					<disableCastChecking>true</disableCastChecking>
					<disableClassMetadata>true</disableClassMetadata>
					<extraJvmArgs>-Xmx1500M -Xss1024k -XX:MaxPermSize=128M</extraJvmArgs>
					<module>org.ktunaxa.referral.KtunaxaEntryPoint</module>
					<runTarget>index.html</runTarget>
					<hostedWebapp>${project.build.directory}/${project.build.finalName}</hostedWebapp>
					<copyWebapp>true</copyWebapp>
				</configuration>
				<executions>
					<execution>
						<id>compile</id>
						<phase>test-compile</phase>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
					<execution>
						<id>clean</id>
						<phase>clean</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
          		<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>tools/*.java</exclude>
						<exclude>**/SendEmailTest.java</exclude>
						<exclude>**/CmisServiceTest.java</exclude>
					</excludes>
				</configuration>
			</plugin>

		</plugins>
	</build>

	<profiles>
		<!-- m2eclipse with embedded jetty -->
		<profile>
			<id>m2e</id>
			<activation>
				<property>
					<name>m2e.version</name>
				</property>
			</activation>
			<dependencies>
				<dependency>
					<groupId>org.geomajas</groupId>
					<artifactId>geomajas-jetty-runner</artifactId>
					<version>1.0.0</version>
				</dependency>
				<dependency>
					<groupId>com.google.gwt</groupId>
					<artifactId>gwt-dev</artifactId>
					<version>${gwt.version}</version>
					<scope>provided</scope>
				</dependency>
			</dependencies>
			<properties>
				<gwt.compiler.skip>true</gwt.compiler.skip>
			</properties>
		</profile>
		<profile>
			<id>skipGwt</id>
			<activation>
				<property>
					<name>skipGwt</name>
				</property>
			</activation>
			<properties>
				<gwt.compiler.skip>true</gwt.compiler.skip>
			</properties>
		</profile>
		<profile>
			<id>jar</id>
			<activation>
				<property>
					<name>jar</name>
				</property>
			</activation>
			<build>
				<!-- can't use generated name in assembly descriptor -->
				<finalName>ktunaxa</finalName>
				<plugins>
					<!-- executable jar -->
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-jar-plugin</artifactId>
						<configuration>
							<archive>
								<manifest>
									<addClasspath>true</addClasspath>
									<classpathPrefix>lib/</classpathPrefix>
									<mainClass>org.ktunaxa.referral.shapereader.ShapeImportRunner</mainClass>
								</manifest>
							</archive>
						</configuration>
						<executions>
							<execution>
								<id>jar</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>jar</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<!-- redefined here to be executed before assembly -->
					<plugin>
						<artifactId>maven-war-plugin</artifactId>
						<executions>
							<execution>
								<id>war</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>war</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<!-- zip up executable jar and dependencies -->
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<configuration>
							<descriptors>
								<descriptor>src/main/assembly/executable-jar-assembly.xml</descriptor>
							</descriptors>
						</configuration>
						<executions>
							<execution>
								<id>single</id>
								<phase>prepare-package</phase>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
			<properties>
				<gwt.compiler.skip>true</gwt.compiler.skip>
			</properties>
		</profile>
		
		<profile>
			<id>db</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>sql-maven-plugin</artifactId>
						<version>1.4</version>
		
						<dependencies>
							<!-- specify the dependent jdbc driver here -->
							<dependency>
								<groupId>postgresql</groupId>
								<artifactId>postgresql</artifactId>
								<version>8.1-407.jdbc3</version>
							</dependency>
						</dependencies>
		
						<!-- common configuration shared by all executions -->
						<configuration>
							<driver>org.postgresql.Driver</driver>
							<url>jdbc:postgresql://${dbHostPort}/postgres</url>
							<username>${dbAdminUser}</username>
							<password>${dbAdminPassword}</password>
						</configuration>
		
						<executions>
							<execution>
								<id>drop and create</id>
								<goals>
									<goal>execute</goal>
								</goals>
            					<phase>process-resources</phase>
								<configuration>
									<!-- need another database to drop/create the targeted one -->
									<url>jdbc:postgresql://${dbHostPort}/postgres</url>
									<autocommit>true</autocommit>
									<sqlCommand>
										drop database referral;
										create database referral TEMPLATE=template_postgis;
										alter database referral OWNER TO referral_group;
										grant all on database referral to referral_group;
										<!--
										drop database alfresco;
										create database alfresco;
										alter database alfresco OWNER TO alfresco_group;
										grant all on database alfresco to alfresco_group;
										-->
									</sqlCommand>
									<onError>continue</onError>
								</configuration>
							</execution>

							<!--
							<execution>
								<id>drop schema</id>
								<goals>
									<goal>execute</goal>
								</goals>
            					<phase>process-resources</phase>
								<configuration>
									<!++ need to login as postgres to drop schema ++>
									<url>jdbc:postgresql://${dbHostPort}/referral</url>
									<autocommit>true</autocommit>
									<sqlCommand>
										drop table reference_layer_type cascade;
										drop table reference_layer cascade;
										drop table reference_value cascade;
										drop table reference_value_attribute cascade;
										drop table reference_base cascade;
										drop table reference_base_attribute cascade;
										drop table referral_status cascade;
										drop table referral_type cascade;
										drop table referral_application_type cascade;
										drop table referral_disposition_type cascade;
										drop table referral cascade;
										drop sequence referral_number_seq cascade;
										drop table document_type cascade;
										drop table referral_comment cascade;
										drop table document cascade;
										drop table document_comment cascade;
										drop table template cascade;
									</sqlCommand>
									<onError>continue</onError>
								</configuration>
							</execution>
					        -->
							<execution>
								<id>grant spatial table rights</id>
								<goals>
									<goal>execute</goal>
								</goals>
            					<phase>process-resources</phase>
								<configuration>
									<!-- need to login as postgres to grant table rights -->
									<url>jdbc:postgresql://${dbHostPort}/referral</url>
									<autocommit>true</autocommit>
									<sqlCommand>
										grant all on spatial_ref_sys to referral_group;
										grant all on geometry_columns to referral_group;
									</sqlCommand>
									<onError>continue</onError>
								</configuration>
							</execution>

							<execution>
								<id>schema and data</id>
								<goals>
									<goal>execute</goal>
								</goals>
           						<phase>process-resources</phase>
								<configuration>
									<url>jdbc:postgresql://${dbHostPort}/referral</url>
									<username>referral</username>
									<password>referral</password>
									<srcFiles>
										<srcFile>src/main/sql/schema/create-tables.sql</srcFile>
										<srcFile>src/main/sql/schema/create-activiti-tables.sql</srcFile>
										<srcFile>src/main/sql/data/fill-tables.sql</srcFile>
										<srcFile>src/main/sql/data/fill-activiti-tables.sql</srcFile>
									</srcFiles>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>

		<profile>
			<id>updatedb</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>sql-maven-plugin</artifactId>
						<version>1.4</version>

						<dependencies>
							<!-- specify the dependent jdbc driver here -->
							<dependency>
								<groupId>postgresql</groupId>
								<artifactId>postgresql</artifactId>
								<version>8.1-407.jdbc3</version>
							</dependency>
						</dependencies>

						<!-- common configuration shared by all executions -->
						<configuration>
							<driver>org.postgresql.Driver</driver>
							<url>jdbc:postgresql://${dbHostPort}/postgres</url>
							<username>${dbAdminUser}</username>
							<password>${dbAdminPassword}</password>
						</configuration>

						<executions>
							<execution>
								<id>update</id>
								<goals>
									<goal>execute</goal>
								</goals>
           						<phase>process-resources</phase>
								<configuration>
									<url>jdbc:postgresql://${dbHostPort}/referral</url>
									<username>referral</username>
									<password>referral</password>
									<srcFiles>
										<srcFile>src/main/sql/schema/update-tables.sql</srcFile>
									</srcFiles>
								</configuration>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<repositories>

		<repository>
			<id>Geomajas</id>
			<name>Geomajas repository</name>
			<url>http://apps.geomajas.org/nexus/content/groups/released/</url>
		</repository>

		<!-- uncomment if you want to use Geomajas snapshots, comment for faster builds  -->
		<repository>
			<id>Geomajas snapshots</id>
			<name>Geomajas snapshot repository</name>
			<url>http://apps.geomajas.org/nexus/content/groups/latest/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>Geomajas</id>
			<name>Geomajas repository</name>
			<url>http://maven.geomajas.org/</url>
		</pluginRepository>
	</pluginRepositories>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<dbHostPort>localhost:5432</dbHostPort>
		<dbAdminUser>postgres</dbAdminUser>
		<dbAdminPassword>postgres</dbAdminPassword>

		<gwt.compiler.skip>false</gwt.compiler.skip>
	</properties>

</project>
