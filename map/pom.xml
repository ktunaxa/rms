<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ This is part of the Ktunaxa referral system.
  ~
  ~ Copyright 2011 Geosparc nv, http://www.geosparc.com/, Belgium.
  ~ Copyright 2011 Ktunaxa Nation Counsil, http://www.ktunaxa.org/, Canada.
  ~
  ~ The program is available in open source according to the GNU Affero
  ~ General Public License. All contributions in this program are covered
  ~ by the Geomajas Contributors License Agreement. For full licensing
  ~ details, see LICENSE.txt in the project root.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.ktunaxa.referral</groupId>
		<artifactId>ktunaxa-parent</artifactId>
		<version>1.0.0-SNAPSHOT</version>
	</parent>
	<groupId>org.ktunaxa.referral</groupId>
	<artifactId>ktunaxa-map</artifactId>
	<packaging>war</packaging>
	<name>Mapping dashboard</name>
	<description>Mapping dashboard for Tkunaxa referral system</description>
	<url>http://www.ktunaxa.org/</url>

	<scm>
		<connection>scm:svn:https://svn.geomajas.org/geosparc/projects/ktunaxa/map</connection>
		<developerConnection>scm:svn:https://svn.geomajas.org/geosparc/projects/ktunaxa/map</developerConnection>
		<url>https://svn.geomajas.org/geosparc/projects/ktunaxa/map</url>
	</scm>

	<licenses>
		<license>
			<name>GNU Affero General Public License, Version 3</name>
			<url>http://www.gnu.org/licenses/agpl-3.0.html</url>
			<distribution>repo</distribution>
		</license>
	</licenses>
	
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.geomajas</groupId>
				<artifactId>geomajas-backend</artifactId>
				<version>1.9.0-SNAPSHOT</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.geomajas</groupId>
				<artifactId>geomajas-gwt-client</artifactId>
				<version>1.9.0-SNAPSHOT</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.geomajas.plugin</groupId>
				<artifactId>geomajas-layer-hibernate</artifactId>
				<version>1.8.0-SNAPSHOT</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>org.geomajas</groupId>
				<artifactId>geomajas-dep</artifactId>
				<version>1.11.4</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	
	<dependencies>
		<dependency>
			<groupId>org.ktunaxa.referral</groupId>
			<artifactId>ktunaxa-theme</artifactId>
			<version>1.0.0-SNAPSHOT</version>
		</dependency>

		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
		</dependency>

		<dependency>
			<groupId>com.smartgwt</groupId>
			<artifactId>smartgwt-skins</artifactId>
			<version>2.4</version>
		</dependency>

		<!-- Shape-reader dependencies -->
		<dependency>
			<groupId>org.geotools</groupId>
			<artifactId>gt-shapefile</artifactId>
			<version>2.6.3</version>
		</dependency>

		<!-- Geomajas dependencies -->
		<dependency>
			<groupId>org.geomajas</groupId>
			<artifactId>geomajas-gwt-client</artifactId>
		</dependency>
		<dependency>
			<groupId>org.geomajas.plugin</groupId>
			<artifactId>geomajas-layer-geotools</artifactId>
		</dependency>
		<dependency>
			<groupId>org.geomajas.plugin</groupId>
			<artifactId>geomajas-layer-wms</artifactId>
		</dependency>
		<dependency>
			<groupId>org.geomajas.plugin</groupId>
			<artifactId>geomajas-layer-openstreetmap</artifactId>
		</dependency>
		<dependency>
			<groupId>org.geomajas.plugin</groupId>
			<artifactId>geomajas-layer-google</artifactId>
			<version>1.8.0-SNAPSHOT</version>
		</dependency>
		<dependency>
			<groupId>org.geomajas</groupId>
			<artifactId>geomajas-testdata</artifactId>
		</dependency>

		<!-- Hibernate layer can be removed if not needed, but the "Road" class needs the Hibernate stuff -->
		<dependency>
			<groupId>org.geomajas.plugin</groupId>
			<artifactId>geomajas-layer-hibernate</artifactId>
		</dependency>
		<!-- uncomment if you want to use Hibernate with postgis, for another db you will need similar dependencies -->
		<dependency>
			<groupId>org.hibernatespatial</groupId>
			<artifactId>hibernate-spatial-postgis</artifactId>
		</dependency>
		<dependency>
			<groupId>org.postgis</groupId>
			<artifactId>postgis-jdbc</artifactId>
		</dependency>
		<dependency>
			<groupId>postgresql</groupId>
			<artifactId>postgresql</artifactId>
		</dependency>
		
		<!-- Google dependencies -->
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-user</artifactId>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>com.google.gwt</groupId>
			<artifactId>gwt-servlet</artifactId>
			<scope>runtime</scope>
		</dependency>

		<!-- logging dependencies, delegate all to slf4j and use logback -->
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>jcl-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
		</dependency>

		<!-- Unit testing -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-test</artifactId>
			<scope>test</scope>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<encoding>utf8</encoding>
					<source>1.5</source>
					<target>1.5</target>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>2.5-DF</version>
				<configuration>
					<configLocation>${basedir}/src/main/resources/checkstyle.xml</configLocation>
				</configuration>
				<executions>
					<execution>
						<phase>verify</phase>
						<goals>
							<goal>check</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<!-- Run the application using "mvn jetty:run" -->
			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<version>6.1.20</version>
				<configuration>
					<webAppConfig>
						<contextPath>/</contextPath>
						<baseResource implementation="org.mortbay.resource.ResourceCollection">
							<!-- need both the webbapp dir and location where GWT puts stuff -->
							<resourcesAsCSV>${basedir}/src/main/webapp,${project.build.directory}/${project.build.finalName}</resourcesAsCSV>
						</baseResource>
					</webAppConfig>
					<reload>manual</reload>
				</configuration>
			</plugin>			

			<!-- some default config, added to in profiles -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>gwt-maven-plugin</artifactId>
				<version>2.1.0-1</version>
				<configuration>
					<disableCastChecking>true</disableCastChecking>
					<disableClassMetadata>true</disableClassMetadata>
					<extraJvmArgs>-Xmx512M -Xss1024k</extraJvmArgs>
				</configuration>
			</plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-eclipse-plugin</artifactId>
				<version>2.8</version>
			</plugin>

			<plugin>
				<groupId>com.googlecode</groupId>
				<artifactId>maven-db-plugin</artifactId>
				<configuration>
					<adminDbConnectionSettings>
						<jdbcDriver>org.postgresql.Driver</jdbcDriver>
						<jdbcUrl>jdbc:postgresql://localhost:5432/</jdbcUrl>
						<userName>postgres</userName>
						<password>postgres</password>
					</adminDbConnectionSettings>
					<appDbConnectionSettings>
						<jdbcDriver>org.postgresql.Driver</jdbcDriver>
						<jdbcUrl>jdbc:postgresql://localhost:5432/ktunaxa</jdbcUrl>
						<userName>ktunaxa</userName>
						<password>toenacha</password>
					</appDbConnectionSettings>
					<sqlDelimiter> #--;</sqlDelimiter>
					<dbDataScriptsDirectory>
						<param>src/main/sql/data</param>
					</dbDataScriptsDirectory>
					<dbSchemaScriptsDirectory>
						<param>src/main/sql/schema</param>
					</dbSchemaScriptsDirectory>
					<dbUpdateScriptsDirectory>
						<param>src/main/sql/update</param>
					</dbUpdateScriptsDirectory>
					<dbCreateStatements>
						create database ktunaxa TEMPLATE=template_postgis; #--;
						ALTER DATABASE ktunaxa OWNER TO ktunaxa; #--;
					</dbCreateStatements>
					<dbDropStatements>drop database ktunaxa; #--;</dbDropStatements>
				</configuration>
				<dependencies>
					<dependency>
						<groupId>org.postgis</groupId>
						<artifactId>postgis-jdbc</artifactId>
						<version>1.1.6</version>
					</dependency>
					<dependency>
						<groupId>postgresql</groupId>
						<artifactId>postgresql</artifactId>
						<version>8.1-407.jdbc3</version>
					</dependency>
				</dependencies>
			</plugin>

		</plugins>
	</build>

	<profiles>
		<profile>
			<id>defaultGWT</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>gwt-maven-plugin</artifactId>
						<configuration>
							<module>org.ktunaxa.referral.KtunaxaEntryPoint</module>
							<runTarget>index.html</runTarget>
							<hostedWebapp>${project.build.directory}/${project.build.finalName}</hostedWebapp>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>clean</goal>
									<goal>generateAsync</goal>
									<goal>compile</goal>
									<goal>test</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<!--
			m2eclipse with WTP deployment, see http://jvminside.blogspot.com/2010/02/efficient-gwt-development-with-eclipse.html
		-->
		<profile>
			<id>m2e</id>
			<activation>
				<property>
					<name>m2e.version</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>gwt-maven-plugin</artifactId>
						<configuration>
							<module>org.ktunaxa.referral.KtunaxaEntryPoint</module>
							<runTarget>/ktunaxa-referral/index.html</runTarget>
							<noServer>true</noServer>
							<port>8080</port>
							<debugPort>9008</debugPort>
							<extra>${project.build.directory}/gwt-extra</extra>
							<gen>${project.build.directory}/gwt-gen</gen>
							<hostedWebapp>${project.build.directory}/generated-web-resources/gwt</hostedWebapp>
						</configuration>
						<executions>
							<execution>
								<goals>
									<goal>clean</goal>
									<goal>generateAsync</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.5</version>
						<configuration>
							<target>
								<xslt in=".settings/org.eclipse.wst.common.component" out=".settings/org.eclipse.wst.common.tmp" style=".eclipse/wb-resource.xsl" />
								<move file=".settings/org.eclipse.wst.common.tmp" tofile=".settings/org.eclipse.wst.common.component" />
							</target>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>skipGwt</id>
			<activation>
				<property>
					<name>skipGwt</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>gwt-maven-plugin</artifactId>
						<executions>
							<execution>
								<goals>
									<goal>clean</goal>
									<goal>generateAsync</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>

	<repositories>

		<repository>
			<id>Geomajas</id>
			<name>Geomajas repository</name>
			<url>http://maven.geomajas.org/</url>
		</repository>

		<repository>
			<id>Geomajas staging</id>
			<name>Geomajas staging repository</name>
			<url>https://oss.sonatype.org/content/groups/staging</url>
		</repository>
    
		<!-- uncomment if you want to use Geomajas snapshots, comment for faster builds  -->
		<!-- 
		<repository>
			<id>Geomajas snapshots</id>
			<name>Geomajas snapshot repository</name>
			<url>http://apps.geomajas.org/nexus/content/groups/latest/</url>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</repository>
		 -->
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>Geomajas</id>
			<name>Geomajas repository</name>
			<url>http://maven.geomajas.org/</url>
		</pluginRepository>
		<pluginRepository>
	        <id>maven-db-plugin-repo</id>
	        <name>maven db plugin repository</name>
	        <url>http://maven-db-plugin.googlecode.com/svn/maven/repo</url>
	    </pluginRepository>
	</pluginRepositories>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
	</properties>

</project>
